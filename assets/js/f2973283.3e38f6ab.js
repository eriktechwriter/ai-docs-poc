"use strict";(self.webpackChunktrend_vision_one_docs=self.webpackChunktrend_vision_one_docs||[]).push([[8555],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(96540);const i={},c=o.createContext(i);function s(e){const t=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(c.Provider,{value:t},e.children)}},81308:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"group-policy-object-sample-script","title":"Group Policy Object Sample Script","description":"A sample PowerShell script to deploy the Agent Installer using the Active Directory Group Policy Management console.","source":"@site/docs/group-policy-object-sample-script.md","sourceDirName":".","slug":"/trend-vision-one-group-policy-object-sample-script","permalink":"/ai-docs-poc/trend-vision-one-group-policy-object-sample-script","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"slug":"trend-vision-one-group-policy-object-sample-script","title":"Group Policy Object Sample Script"}}');var i=n(74848),c=n(28453);const s={slug:"trend-vision-one-group-policy-object-sample-script",title:"Group Policy Object Sample Script"},r=void 0,l={},a=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"A sample PowerShell script to deploy the Agent Installer using the Active Directory Group Policy Management console."}),"\n",(0,i.jsxs)(t.p,{children:["Change the variables in the code to match your environment if needed, such as ",(0,i.jsx)(t.code,{children:"$logpathlocal"}),", ",(0,i.jsx)(t.code,{children:"$uncPath"}),", and ",(0,i.jsx)(t.code,{children:"$localPath"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The script requires using System to execute to avoid security concerns with using a high privilege account."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-codeblock",children:'$logpathlocal="C:\\temp\\V1ES\\Logs" #Specify a path users have enough permission to write to.\nStart-Transcript -Path $logpathlocal -Append\n$service = Get-Service -Name tmlisten,ntrtscan,amsp,ds_agent -ErrorAction SilentlyContinue\nif ($service -eq $null) {\n    $uncPath = "\\\\TrendMicro_Demo_VS\\V1ES_client\\V1ES" #Specify the UNC location of the unzipped agent installation files\n    $localPath = "C:\\temp\\" #The location to copy the installation files to on the target endpoint \n    $installerFileName = "EndpointBasecamp.exe"\n\n    Copy-Item -Path $uncPath -Destination $localPath -Recurse -Force\n    while ((Get-ChildItem $localPath).Count -lt (Get-ChildItem $uncPath).Count) {\n        Start-Sleep -Seconds 1\n    }\n    Write-host "File copy completed, start to install progress" \n    $localInstallerPath = Join-Path $localPath $installerFileName\n    Start-Process -Wait -FilePath $localInstallerPath -ArgumentList \'/s /v/qn\' -PassThru\n} else {\n    Write-host "The services already existed, skip the installation." \n}\nStop-Transcript\n'})})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);