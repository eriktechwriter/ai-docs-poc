[
  {
    "id": "cis-aks17-322.md_chunk_0",
    "content": "/*<![CDATA[*/ $('#title').html($('meta[name=map-description]').attr('content')); /*]]>*/ 3.2.2 - Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated) Profile Applicability: Level 1 Do not allow all requests. Enable explicit authorization. Kubelets, by default, allow all authenticated requests (even anonymous ones) without needing explicit authorization checks from the apiserver. You should restrict this behavior and only allow explicitly authorized requests. Note See the Azure AKS documentation for the default value. Impact Unauthorized requests will be denied. Audit Audit Method 1: If using a Kubelet configuration file, check that there is an entry for \"authentication\": { \"webhook\": { \"enabled\": true }.",
    "metadata": {
      "filename": "cis-aks17-322.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/cis-aks17-322.md",
      "title": "3.2.2 - Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:45.825Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 0
    },
    "embedding": [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      88,
      71,
      744
    ]
  },
  {
    "id": "cis-aks17-322.md_chunk_1",
    "content": "and to find the Kubelet config file: ps -ef | grep kubelet The output should return something similar to --config /etc/kubernetes/kubelet/kubelet-config.json which is the location of the Kubelet config file. Open the Kubelet config file: sudo more /etc/kubernetes/kubelet/kubelet-config.json Verify that \"authentication\": {\"webhook\": {\"enabled\": true}} is present and that \"authentication\": {\"mode\": { is not set to AlwaysAllow. If \"authentication\": {\"mode\": { argument is present, check that it is not set to AlwaysAllow. If it is not present, check that there is a Kubelet config file specified by --config, and that file sets \"authentication\": {\"mode\": { to something other than AlwaysAllow. Audit Method 2: If using the API configz endpoint, consider searching for the status of \"authentication\"... \"webhook\":{\"enabled\":true} by extracting the live configuration from the nodes running Kubelet.",
    "metadata": {
      "filename": "cis-aks17-322.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/cis-aks17-322.md",
      "title": "3.2.2 - Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:45.825Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 1
    },
    "embedding": [
      0,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      109,
      54,
      898
    ]
  },
  {
    "id": "cis-aks17-322.md_chunk_2",
    "content": "Set the local proxy port and the following variables, and provide the proxy port number and node name: HOSTNAME_PORT=\"localhost-and-port-number\" NODE_NAME=\"The-Name-Of-Node-To-Extract-Configuration\" (from the output of \"kubectl get nodes\") kubectl proxy --port=8001 & export HOSTNAME_PORT=localhost:8001 (example host and port number) export NODE_NAME=ip-192.168.31.226.aks.internal (example node name from \"kubectl get nodes\") curl -sSL \"http://${HOSTNAME_PORT}/api/v1/nodes/${NODE_NAME}/proxy/configz\" Remediation Remediation Method 1: If modifying the Kubelet config file, edit the kubelet-config.json file /etc/kubernetes/kubelet/kubelet-config.json and ensure the parameter is set correctly: \"authentication\"...",
    "metadata": {
      "filename": "cis-aks17-322.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/cis-aks17-322.md",
      "title": "3.2.2 - Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:45.825Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 2
    },
    "embedding": [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      98,
      50,
      716
    ]
  },
  {
    "id": "cis-aks17-322.md_chunk_3",
    "content": "t the Kubelet service file /etc/systemd/system/kubelet.service.d/10-kubelet-args.conf on each worker node and add the following to the KUBELET_ARGS variable string: --authorization-mode=Webhook Remediation Method 3: If using the API configz endpoint, verify that \"authentication.*webhook\":{\"enabled\":true} is present by extracting the live configuration from the nodes running Kubelet. See step-by-step configmap procedures in Reconfigure a Node's Kubelet in a Live Cluster, and rerun the curl statement from the audit process to check the configuration changes: \"kubectl proxy --port=8001 &\" \"export HOSTNAME_PORT=localhost:8001 (example host and port number) export NODE_NAME=ip-192.168.31.226.aks.internal (example node name from \"\"kubectl get nodes\"\")\" \"curl -sSL \"\"http://${HOSTNAME_PORT}/api/v1/nodes/${NODE_NAME}/proxy/configz\"\"\" For all three remediations: Restart the kubelet service and check the status: systemctl daemon-reload systemctl restart kubelet.service systemctl status kubelet -l",
    "metadata": {
      "filename": "cis-aks17-322.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/cis-aks17-322.md",
      "title": "3.2.2 - Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:45.825Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 3
    },
    "embedding": [
      0,
      1,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      130,
      81,
      1000
    ]
  },
  {
    "id": "cis-aks17-322.md_chunk_4",
    "content": "Â© 2025 Trend Micro Incorporated. All rights reserved.Search Knowledge Base",
    "metadata": {
      "filename": "cis-aks17-322.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/cis-aks17-322.md",
      "title": "3.2.2 - Ensure that the --authorization-mode argument is not set to AlwaysAllow (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:45.825Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 4
    },
    "embedding": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      10,
      10,
      74
    ]
  }
]