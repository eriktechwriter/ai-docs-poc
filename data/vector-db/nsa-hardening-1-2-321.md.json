[
  {
    "id": "nsa-hardening-1-2-321.md_chunk_0",
    "content": "/*<![CDATA[*/ $('#title').html($('meta[name=map-description]').attr('content')); /*]]>*/ 3.2.1 - Ensure LimitRange policy is used to limit resource usage (Automated) Profile applicability: Level 1 A LimitRange policy constrains individual resources per Pod or container within a particular namespace by enforcing maximum compute and storage resources. Only one LimitRange constraint can be created per namespace. Audit Run the following command and review limit range policies: kubectl get limitranges --all-namespaces Add LimitRange policies to constrain container resources. Remediation Create a limit range policy with a default request and limit, as well as min and max requests, for each container. LimitRange support is enabled by default in Kubernetes 1.10 and newer. The following YAML file specifies a LimitRange with a default request and limit, as well as a min and max request, for each container.",
    "metadata": {
      "filename": "nsa-hardening-1-2-321.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/nsa-hardening-1-2-321.md",
      "title": "3.2.1 - Ensure LimitRange policy is used to limit resource usage (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:46.768Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 0
    },
    "embedding": [
      0,
      0,
      0,
      3,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      110,
      72,
      909
    ]
  },
  {
    "id": "nsa-hardening-1-2-321.md_chunk_1",
    "content": "apiVersion: v1 kind: LimitRange metadata: name: cpu-min-max-demo-lr spec: limits - default: cpu: 1 defaultRequest: cpu: 0.5 max: cpu: 2 min: cpu 0.5 type: Container A LimitRange can be applied to a namespace with: kubectl apply -f <example-LimitRange>.yaml --namespace=<Enter-Namespace> After the LimitRange configuration is applied, all containers created in the namespace are assigned the default CPU request and limit, if not specified. All containers in the namespace must have a CPU request greater than or equal to the minimum value and less than or equal to the maximum CPU value or the container will not be instantiated. Â© 2025 Trend Micro Incorporated. All rights reserved.Search Knowledge Base",
    "metadata": {
      "filename": "nsa-hardening-1-2-321.md",
      "filePath": "/Users/erik_olafson/kiro-projects/agentic-docs/agentic-docs-poc/ai-docs-poc/docs/nsa-hardening-1-2-321.md",
      "title": "3.2.1 - Ensure LimitRange policy is used to limit resource usage (Automated)",
      "category": "general",
      "tags": [
        "endpoint-security",
        "trend-vision-one"
      ],
      "lastIndexed": "2025-09-18T23:50:46.768Z",
      "heading": "",
      "chunkType": "partial",
      "chunkIndex": 1
    },
    "embedding": [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      91,
      57,
      704
    ]
  }
]